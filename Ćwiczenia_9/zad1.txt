1) Plan zapytania

"QUERY PLAN"
"Hash Join  (cost=415.95..1565.22 rows=279 width=44) (actual time=2.211..28.081 rows=486 loops=1)"
"  Hash Cond: (soh.customerid = c.customerid)"
"  ->  Seq Scan on salesorderheader soh  (cost=0.00..1066.65 rows=31465 width=32) (actual time=0.393..19.011 rows=31465 loops=1)"
"  ->  Hash  (cost=413.75..413.75 rows=176 width=16) (actual time=1.797..1.800 rows=176 loops=1)"
"        Buckets: 1024  Batches: 1  Memory Usage: 16kB"
"        ->  Seq Scan on customer c  (cost=0.00..413.75 rows=176 width=16) (actual time=0.020..1.759 rows=176 loops=1)"
"              Filter: (territoryid = 5)"
"              Rows Removed by Filter: 19644"
"Planning Time: 4.411 ms"
"Execution Time: 28.212 ms"


2) Plan zapytania po indeksowaniu

"QUERY PLAN"
"Hash Join  (cost=183.14..1332.41 rows=279 width=44) (actual time=0.782..12.462 rows=486 loops=1)"
"  Hash Cond: (soh.customerid = c.customerid)"
"  ->  Seq Scan on salesorderheader soh  (cost=0.00..1066.65 rows=31465 width=32) (actual time=0.018..3.546 rows=31465 loops=1)"
"  ->  Hash  (cost=180.94..180.94 rows=176 width=16) (actual time=0.667..0.669 rows=176 loops=1)"
"        Buckets: 1024  Batches: 1  Memory Usage: 16kB"
"        ->  Bitmap Heap Scan on customer c  (cost=5.65..180.94 rows=176 width=16) (actual time=0.242..0.363 rows=176 loops=1)"
"              Recheck Cond: (territoryid = 5)"
"              Heap Blocks: exact=24"
"              ->  Bitmap Index Scan on idx_territoryid  (cost=0.00..5.61 rows=176 width=0) (actual time=0.215..0.215 rows=176 loops=1)"
"                    Index Cond: (territoryid = 5)"
"Planning Time: 2.034 ms"
"Execution Time: 12.657 ms"


3) Porównanie

W drugim przypadku czas planowania i wykonania zapytania jest krótszy niż w pierwszym. Poza tym zamiast skanowania sekwencyjnego
wykonywane jest skanowanie bitmapy
Otrzymany wynik jest rezultatem indeksowania, szczególnie tego dokonanego na territoryid z tabeli customer.
Indeksy to struktury danych, które zawierają wskaźniki do miejsca przechowywania danych w bazie danych, przyspieszając
wyszukiwanie i sortowanie danych w tabelach.
